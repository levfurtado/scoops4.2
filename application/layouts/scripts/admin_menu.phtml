<?php
/**
 * Generate admin menu.
 */

global $Campsite, $g_user;

camp_load_translation_strings('home');

if (!isset($g_user)) {
    $g_user = Zend_Registry::get('user');
}

$showPublishingEnvironmentMenu = ($g_user->hasPermission('ManageTempl')
    || $g_user->hasPermission('DeleteTempl')
    || $g_user->hasPermission('ManageArticleTypes')
    || $g_user->hasPermission('DeleteArticleTypes')
    || $g_user->hasPermission('ManageTopics')
    || $g_user->hasPermission('ManageLanguages')
    || $g_user->hasPermission('DeleteLanguages')
    || $g_user->hasPermission('ManageCountries')
    || $g_user->hasPermission('DeleteCountries'));

$showConfigureMenu = ($showPublishingEnvironmentMenu
    || $g_user->hasPermission('ManageLocalizer')
    || $g_user->hasPermission('ViewLogs'));
$showUserMenu = ($g_user->hasPermission('ManageUsers')
    || $g_user->hasPermission('DeleteUsers')
    || $g_user->hasPermission('ManageSubscriptions')
    || $g_user->hasPermission('ManageUserTypes')
    || $g_user->hasPermission('ManageReaders')
    || $g_user->hasPermission('EditAuthors'));

$showAdminActions = (($g_user->hasPermission('ManageIssue') && $g_user->hasPermission('AddArticle'))
    || (CampCache::IsEnabled() && $g_user->hasPermission('ClearCache')));

// init view
$view = isset($this) ? $this : new Zend_View;

// build menu pages
$pages = array(
    array(
        'label' => getGS('Dashboard'),
        'module' => 'admin',
    ),
    array(
        'label' => getGS('Content'),
        'uri' => '#',
    ),
    array(
        'label' => getGS('Actions'),
        'uri' => '#',
    ),
    array(
        'label' => getGS('Configure'),
        'uri' => '#',
    ),
    array(
        'label' => getGS('Users'),
        'uri' => '#',
    ),
);

$pages[1]['pages'][] = array(
    'label' => getGS('Publications'),
    'module' => 'admin',
    'controller' => 'pub',
    'action' => 'index.php',
    'resource' => 'publication',
    'privilege' => 'manage',
);

$pages[1]['pages'][] = array(
    'label' => getGS('Comments'),
    'module' => 'admin',
    'controller' => 'comment',
    'action' => 'index',
    'resource' => 'comment',
    'privilege' => 'moderate',
);

$pages[1]['pages'][] = array(
    'label' => getGS('Feedback'),
    'module' => 'admin',
    'controller' => 'feedback',
    'action' => 'index',
    'resource' => 'feedback',
    'privilege' => 'manage',
);

$pages[1]['pages'][] = array(
    'label' => getGS('Media Archive'),
    'module' => 'admin',
    'controller' => 'media-archive',
    'action' => 'index.php',
);

$pages[1]['pages'][] = array(
    'label' => getGS('Search'),
    'module' => 'admin',
    'controller' => 'universal-list',
    'action' => 'index.php',
);

$pages[1]['pages'][] = array(
    'label' => getGS('Pending articles'),
    'module' => 'admin',
    'controller' => 'pending_articles',
    'action' => 'index.php',
);

/*
$pages[1]['pages'][] = array(
    'label' => 'News Desk',
    'module' => 'admin',
    'controller' => 'ingest',
    'action' => 'index',
    'resource' => 'ingest',
    'privilege' => 'manage',
    'reset_params' => false,
    'params' => array('item' => null),
    'pages' => array(array(
        'label' => getGS('Detail'),
        'module' => 'admin',
        'controller' => 'ingest',
        'action' => 'detail',
        'visible' => false,
    ), array(
        'label' => getGS('Settings'),
        'module' => 'admin',
        'controller' => 'ingest',
        'action' => 'settings',
        'pages' => array(array(
            'label' => getGS('Add feed'),
            'module' => 'admin',
            'controller' => 'ingest',
            'action' => 'add-feed',
        )),
    )),
);
*/

$pages[1]['pages'][] = array(
    'label' => getGS('Featured Article Lists'),
    'module' => 'admin',
    'controller' => 'playlist',
    'action' => 'index',
    'resource' => 'playlist',
    'privilege' => 'manage',
);

// add content/publications
foreach ($Campsite['publications'] as $publication) {
    $pubId = $publication->getPublicationId();
    $publication_page = array(
        'label' => $publication->getName(),
        'uri' => $view->baseUrl("admin/issues/?Pub=$pubId"),
    );

    // add content/publication/issue
    if (isset($Campsite['issues'][$pubId])) {
        foreach ($Campsite['issues'][$pubId] as $issue) {
            $issueId = $issue->getIssueNumber();
            $languageId = $issue->getLanguageId();
            $issue_page = array(
                'label' => sprintf('%d. %s (%s)',
                    $issue->getIssueNumber(),
                    $issue->getName(),
                    $issue->getLanguageName()),
                'uri' => $view->baseUrl("admin/sections/?Pub=$pubId&Issue=$issueId&Language=$languageId"),
            );

            // add content/publication/issue/section
            if (isset($Campsite['sections'][$pubId][$issueId][$languageId])) {
                foreach ($Campsite['sections'][$pubId][$issueId][$languageId] as $section) {
                    $sectionId = $section->getSectionNumber();
                    $section_page = array(
                        'label' => sprintf('%d. %s',
                            $section->getSectionNumber(),
                            $section->getName()),
                        'uri' => $view->baseUrl("admin/articles/?f_publication_id=$pubId&f_issue_number=$issueId&f_language_id=$languageId&f_section_number=$sectionId"),
                    );
                    $issue_page['pages'][] = $section_page;
                }
                if (count($Campsite['sections'][$pubId][$issueId][$languageId]) > 0) {
                    $issue_page['pages'][] = array(
                        'label' => getGS('More...'),
                        'uri' => $view->baseUrl("admin/sections/?Pub=$pubId&Issue=$issueId&Language=$languageId"),
                    );
                }
            }

            $publication_page['pages'][] = $issue_page;
        }

        if (count($Campsite['issues'][$pubId]) > 0) {
            $publication_page['pages'][] = array(
                'label' => getGS('More...'),
                'uri' => $view->baseUrl("admin/issues/?Pub=$pubId"),
            );
        }
    }

    $pages[1]['pages'][] = $publication_page;
}

$pages[2]['pages'][] = array(
    'label' => getGS('Add new article'),
    'module' => 'admin',
    'controller' => 'articles',
    'action' => 'add_move.php',
    'resource' => 'article',
    'privilege' => 'add',
);

if ($g_user->hasPermission('ManagePub') && Saas::singleton()->hasPermission('AddPub')) {
	$pages[2]['pages'][] = array(
	    'label' => getGS('Add new publication'),
	    'module' => 'admin',
	    'controller' => 'pub',
	    'action' => 'add.php',
	    'resource' => 'publication',
	    'privilege' => 'add',
	);
}

if( Saas::singleton()->hasPrivilege('staff' , 'add') ) {
    $pages[2]['pages'][] = array(
	    'label' => getGS('Add new staff member'),
	    'module' => 'admin',
	    'controller' => 'user',
	    'action' => 'create',
	    'resource' => 'user',
	    'privilege' => 'manage',
        'params' => array(
            'is_admin' => 1,
        ),
	);
}



if ($g_user->hasPermission('ManageSubscriptions')) {
	$pages[2]['pages'][] = array(
	    'label' => getGS('Add new subscriber'),
	    'module' => 'admin',
	    'controller' => 'user',
	    'action' => 'create',
	    'resource' => 'user',
	    'privilege' => 'manage',
        'params' => array(
            'is_public' => 1,
        ),
	);
}

$pages[2]['pages'][] = array(
    'label' => getGS('Add new user type'),
    'module' => 'admin',
    'controller' => 'user-group',
    'action' => 'add',
    'resource' => 'user-group',
    'privilege' => 'manage',
);

if ($g_user->hasPermission('ManageArticleTypes')) {
	$pages[2]['pages'][] = array(
	    'label' => getGS('Add new article type'),
	    'module' => 'admin',
	    'controller' => 'article_types',
	    'action' => 'add.php',
	    'resource' => 'article-type',
	    'privilege' => 'manage',
	);
}

if ($g_user->hasPermission('ManageCountries')) {
	$pages[2]['pages'][] = array(
	    'label' => getGS('Add new country'),
	    'module' => 'admin',
	    'controller' => 'country',
	    'action' => 'add.php',
	    'resource' => 'country',
	    'privilege' => 'manage',
	);
}

$pages[2]['pages'][] = array(
    'label' => getGS('Edit your password'),
    'module' => 'admin',
    'controller' => 'user',
    'action' => 'edit-password',
);

if ($showAdminActions) {
    if ($g_user->hasPermission('ManageIssue') && $g_user->hasPermission('AddArticle')) {
        $pages[2]['pages'][] = array(
            'label' => getGS('Import XML'),
            'module' => 'admin',
            'controller' => 'articles',
            'action' => 'la_import.php',
        );
    }

    if ((CampCache::IsEnabled() || CampTemplateCache::factory()) && $g_user->hasPermission('ClearCache')) {
        $pages[2]['pages'][] = array(
            'label' => getGS('Clear system cache'),
            'uri' => $view->baseUrl('admin/?clear_cache=yes'),
        );
    }

    $pages[2]['pages'][] = array(
        'label' => getGS('Backup/Restore'),
        'module' => 'admin',
        'controller' => 'backup.php',
        'resource' => 'backup',
        'privilege' => 'manage',
    );
}

// add configure menu
if ($showConfigureMenu) {
    $pages[3]['pages'][] = array(
        'label' => getGS('System Preferences'),
        'module' => 'admin',
        'controller' => 'system_pref',
        'action' => 'index.php',
        'resource' => 'system-preferences',
        'privilege' => 'edit',
    );

    $pages[3]['pages'][] = array(
        'label' => getGS('Templates'),
        'module' => 'admin',
        'controller' => 'template',
        'action' => 'index',
        'reset_params' => FALSE,
        'visible' => FALSE,
        'pages' => array(
            array(
                'label' => getGS('Edit'),
                'module' => 'admin',
                'controller' => 'template',
                'action' => 'edit',
                'visible' => FALSE,
            ),
            array(
                'label' => getGS('Upload'),
                'module' => 'admin',
                'controller' => 'template',
                'action' => 'upload',
                'visible' => FALSE,
            ),
        ),
    );
if( Saas::singleton()->hasPrivilege('themes' , 'index') ) {
    $pages[3]['pages'][] = array(
        'label' => getGS('Themes'),
        'module' => 'admin',
        'controller' => 'themes',
        'resource' => 'theme',
        'privilege' => 'manage',
        'pages' => array(
            array(
                'label' => getGS('Settings'),
                'module' => 'admin',
                'controller' => 'themes',
                'action' => 'advanced-theme-settings',
                'visible' => false,
                'reset_params' => false,
                'params' => array(
                    'next' => null,
                    'file' => null,
                ),
                'pages' => array(
                    array(
                        'label' => getGS('Upload'),
                        'module' => 'admin',
                        'controller' => 'template',
                        'action' => 'upload',
                    ),
                    array(
                        'label' => getGS('Edit'),
                        'module' => 'admin',
                        'controller' => 'template',
                        'action' => 'edit',
                    ),
                ),
            ),
	    array(
                'label' => getGS('Settings'),
		'module' => 'admin',
		'controller' => 'themes',
		'action' => 'advanced-theme-settings',
		'visible' => false,
		'reset_params' => true,
	    ),
        ),
    );
}

    if ($g_user->hasPermission('ManageArticleTypes') || $g_user->hasPermission('DeleteArticleTypes')) {
	    $pages[3]['pages'][] = array(
	        'label' => getGS('Article Types'),
	        'module' => 'admin',
	        'controller' => 'article_types',
	        'action' => 'index.php',
	        'resource' => 'article-type',
	        'privilege' => 'manage',
	    );
    }

    $pages[3]['pages'][] = array(
        'label' => getGS('Topics'),
        'module' => 'admin',
        'controller' => 'topics',
        'action' => 'index.php',
        'resource' => 'topic',
        'privilege' => 'manage',
    );

    $pages[3]['pages'][] = array(
        'label' => getGS('Languages'),
        'module' => 'admin',
        'controller' => 'languages',
        'resource' => 'language',
        'privilege' => 'manage',
        'pages' => array(
            array(
                'label' => getGS('Edit language'),
                'module' => 'admin',
                'controller' => 'languages',
                'action' => 'edit',
                'visible' => false,
                'resource' => 'language',
                'privilege' => 'manage',
            ),
            array(
                'label' => getGS('Add new language'),
                'module' => 'admin',
                'controller' => 'languages',
                'action' => 'add',
                'visible' => false,
                'resource' => 'language',
                'privilege' => 'manage',
            ),
        ));

    if ($g_user->hasPermission('ManageCountries') || $g_user->hasPermission('DeleteCountries')) {
        $pages[3]['pages'][] = array(
            'label' => getGS('Countries'),
            'module' => 'admin',
            'controller' => 'country',
            'action' => 'index.php',
        );
    }

    if ($g_user->hasPermission('ManageLocalizer')) {
        $pages[3]['pages'][] = array(
            'label' => getGS('Localizer'),
            'module' => 'admin',
            'controller' => 'localizer',
            'action' => 'index.php',
        );
    }

    if ($g_user->hasPermission('ViewLogs')) {
        $pages[3]['pages'][] = array(
            'label' => getGS('Logs'),
            'module' => 'admin',
            'controller' => 'log',
            'resource' => 'log',
            'privilege' => 'view',
        );
    }

    $pages[3]['pages'][] = array(
        'label' => getGS('Support'),
        'module' => 'admin',
        'controller' => 'support',
        'id' => 'stat'
    );

    $pages[3]['pages'][] = array(
        'label' => getGS('Image Rendering'),
        'module' => 'admin',
        'controller' => 'rendition',
    );
} else {
    unset($pages[3]);
}

// add user menu
if ($showUserMenu) {
    if ($g_user->hasPermission('ManageUsers') || $g_user->hasPermission('DeleteUsers')) {
        $pages[4]['pages'][] = array(
            'label' => getGS('Manage Users'),
            'module' => 'admin',
            'controller' => 'user',
            'action' => 'index',
            'reset_params' => false,
            'params' => array('user' => null),
            'pages' => array(
                array(
                    'label' => getGS('Edit user'),
                    'module' => 'admin',
                    'controller' => 'user',
                    'action' => 'edit',
                    'visible' => false,
                    'reset_params' => false,
                    'pages' => array(
                        array(
                            'label' => getGS('Edit permissions'),
                            'module' => 'admin',
                            'controller' => 'acl',
                            'action' => 'edit',
                            'visible' => false,
                        ),
                    ),
                ),
                array(
                    'label' => getGS('Rename user'),
                    'module' => 'admin',
                    'controller' => 'user',
                    'action' => 'rename',
                    'visible' => false,
                    'reset_params' => false,
                ),
                array(
                    'label' => getGS('Create new user'),
                    'module' => 'admin',
                    'controller' => 'user',
                    'action' => 'create',
                    'visible' => false,
                ),
            ),
        );
    }

    if ($g_user->hasPermission('EditAuthors')) {
        $pages[4]['pages'][] = array(
            'label' => getGS('Manage Authors'),
            'module' => 'admin',
            'controller' => 'users',
            'action' => 'authors.php',
        );
    }

    $pages[4]['pages'][] = array(
        'label' => getGS('Manage User Types'),
        'module' => 'admin',
        'controller' => 'user-group',
        'resource' => 'user-group',
        'privilege' => 'manage',
        'pages' => array(
        array(
                'label' => getGS('Add new user type'),
                'module' => 'admin',
                'controller' => 'user-group',
                'action' => 'add',
                'visible' => false,
            ),
            array(
                'label' => getGS('Edit user type'),
                'module' => 'admin',
                'controller' => 'user-group',
                'action' => 'edit-access',
                'visible' => false,
            ),
        ),
    );

    $pages[4]['pages'][] = array(
        'label' => getGS('Manage User Points System'),
        'module' => 'admin',
        'controller' => 'user-points',
        'action' => 'index',
        'privilege' => 'manage',
    );

    if ($g_user->hasPermission('ManageUsers') || $g_user->hasPermission('DeleteUsers')) {
        $pages[4]['pages'][] = array(
            'label' => getGS('Create new account'),
            'module' => 'admin',
            'controller' => 'user',
            'action' => 'create',
        );
    }
} else {
    unset($pages[4]);
}

// get plugins menu
$plugin_pages = CampPlugin::CreatePluginMenu();
if (!empty($plugin_pages)) {
    $pages[] = array(
        'label' => getGS('Plugins'),
        'uri' => '#',
        'pages' => $plugin_pages,
    );
}

// change menu for blogger
$blogService = Zend_Registry::get('container')->getService('blog');
if ($blogService->isBlogger($g_user)) {
    $pages = array(
        array(
            'label' => 'Blog',
            'module' => 'admin',
        ),
    );
}

// set menu classes to speed up loading
foreach ($pages as $i => $page) {
    $pages[$i]['class'] = 'fg-button ui-widget fg-button-icon-right fg-button-ui-state-default fg-button-ui-corner-all';
}

// set navigation
$nav = new Zend_Navigation($pages);
$view->navigation()->menu()->setContainer($nav);
?>

<div class="main-menu-bar">
    <div class="logo"></div>
    <?php echo $view->navigation(); ?>
</div>

<?php if (isset($this) && !$this->legacy) { // zend framework only
// remove top menu classes for breadcrumbs
foreach ($pages as $i => $page) {
    unset($pages[$i]['class']);
}

$nav = new Zend_Navigation($pages);

$view->navigation()->breadcrumbs()
    ->setSeparator(' &gt; ')
    ->setContainer($nav)
    ->setRenderInvisible(true);
?>

<div class="breadcrumb-bar zend clearfix">
    <?php echo $this->navigation()->breadcrumbs(); ?>
</div>

<?php } ?>

<script>
$(document).ready(function() {
    $('#menu-stat').fancybox();
});
</script>
